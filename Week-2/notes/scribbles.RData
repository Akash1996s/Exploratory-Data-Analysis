> ## lattice plotting system
> library(lattice)
> library(datasets)
> ## simple scatterplot
> xyplot(Ozone ~ Wind, data = airquality)
> ## convert 'month' to a factor variable
> airquality <- transform(airquality,Month=factor(Month))
> xyplot(Ozone ~ Wind | Month,data=airquality,layout=c(5,1))
> ## lattice behaviour
> ig <- xyplot(Ozone ~ Wind,data=airquality)
> print(ig) ## plot appears
> xyplot(Ozone ~ Wind,data=airquality) ## auto-plotting
> ## lattice panel functions
> set.seed(100)
> x <- rnorm(100)
> f <- rep(0:1,each=50)
> y <- x+f-f*x+rnorm(100,sd=0.5)
> f <- factor(f,labels=c("Group 1","Group 2"))
> xyplot(y ~ x | f,layout=c(2,1)) ##plot with 2 panels
> ## custom panel function
> xyplot(y ~ x | f,panel=function(x,y,...) {
+ panel.xyplot(x,y,...) ## first call the default function "xyplot
+ panel.abline(h=median(y),lty=2) ## add horizontal line at the median
+ })
> ## regression lines
> xyplot(y ~ x | f,panel=function(x,y,...) {
+ panel.xyplot(x,y,...) ## first call the default function
+ panel.lmline(x,y,col=2) ## overlay a simple regression line
+ })

> ## ggplot2
> library(ggplot2)
> str(mpg)
'data.frame':	234 obs. of  11 variables:
 $ manufacturer: Factor w/ 15 levels "audi","chevrolet",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ model       : Factor w/ 38 levels "4runner 4wd",..: 2 2 2 2 2 2 2 3 3 3 ...
 $ displ       : num  1.8 1.8 2 2 2.8 2.8 3.1 1.8 1.8 2 ...
 $ year        : int  1999 1999 2008 2008 1999 1999 2008 1999 1999 2008 ...
 $ cyl         : int  4 4 4 4 6 6 6 4 4 4 ...
 $ trans       : Factor w/ 10 levels "auto(av)","auto(l3)",..: 4 9 10 1 4 9 1 9 4 10 ...
 $ drv         : Factor w/ 3 levels "4","f","r": 2 2 2 2 2 2 2 1 1 1 ...
 $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...
 $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...
 $ fl          : Factor w/ 5 levels "c","d","e","p",..: 4 4 4 4 4 4 4 4 4 4 ...
 $ class       : Factor w/ 7 levels "2seater","compact",..: 2 2 2 2 2 2 2 2 2 2 ...
> ## qplot
> qplot(displ,hwy,data=mpg)
> qplot(displ,hwy,data=mpg,color=drv)
> qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
geom_smooth: method="auto" and size of largest group is <1000, so using loess. Use 'method = x' to change the smoothing method.
> qplot(hwy,data=mpg,fill=drv) ## hist
stat_bin: binwidth defaulted to range/30. Use 'binwidth = x' to adjust this.
> qplot(log(hwy),data=mpg,geom="density")
> qplot(log(hwy),data=mpg,geom="density",color=drv)
> ## scatterplot
> qplot(log(displ),log(hwy),data=mpg)
> qplot(log(displ),log(hwy),data=mpg,shape=drv)
> qplot(log(displ),log(hwy),data=mpg,color=drv)
> qplot(log(displ),log(hwy),data=mpg,color=drv,geom=c("point","smooth"),method="lm")
> qplot(log(displ),log(hwy),data=mpg,geom=c("point","smooth"),method="lm",facets=.~drv)
> head(mpg)
  manufacturer model displ year cyl      trans
1         audi    a4   1.8 1999   4   auto(l5)
2         audi    a4   1.8 1999   4 manual(m5)
3         audi    a4   2.0 2008   4 manual(m6)
4         audi    a4   2.0 2008   4   auto(av)
5         audi    a4   2.8 1999   6   auto(l5)
6         audi    a4   2.8 1999   6 manual(m5)
  drv cty hwy fl   class
1   f  18  29  p compact
2   f  21  29  p compact
3   f  20  31  p compact
4   f  21  30  p compact
5   f  16  26  p compact
6   f  18  26  p compact

> g <- ggplot(mpg,aes(displ,cty))
> print (g)
Error: No layers in plot
> p <- g + geom_point()
> print (p)
> g + geom_point() ## auto-printing
> ## 1st plot with point layer
> g <- ggplot(mpg, aes(displ, cty))
> g + geom_point()
> g + geom_point() + geom_smooth()
geom_smooth: method="auto" and size of largest group is <1000, so using loess. Use 'method = x' to change the smoothing method.
> g + geom_point() + geom_smooth(method="lm")
> ## adding more layers
> g + geom_point() + facet_grid(.~trans) + geom_smooth(method = "lm") 
Warning message:
In loop_apply(n, do.ply) : NaNs produced

> g + geom_point(color="steelblue",size = 4,alpha = 1/2)
> g + geom_point(aes(color=drv),size = 4,alpha = 1/2)
> g + geom_point(aes(color=drv),size = 4,alpha = 1/2) + labs(title = "hello") + labs(x = expression("log " * PM[2.5]), y = "city")
> g + geom_point(aes(color=drv),size = 4,alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
> g + geom_point(aes(color=drv),size = 4,alpha = 1/2)+theme_bw(base_family ="Times")
> ## axis limits
> testdat <- data.frame(x = 1:100, y = rnorm(100))
There were 20 warnings (use warnings() to see them)
> testdat[50,2] <- 100  ## Outlier
> plot(testdat$x, testdat$y, type = "l", ylim = c(-3,3))
> g <- ggplot(testdat, aes(x = x, y = y))
> g + geom_line()
> g + geom_line() + ylim(-3, 3)
> g + geom_line() + coord_cartesian(ylim = c(-3, 3))
> ## Calculate the deciles of the data
> cutpoints <- quantile(mpg$displ, seq(0, 1, length = 11), na.rm = TRUE)
> ## Cut the data at the deciles and create a new factor variable!
> mpg$hwy <- cut(mpg$displ, cutpoints)
> levels(mpg$hwy)
 [1] "(1.6,2]"   "(2,2.2]"   "(2.2,2.5]" "(2.5,2.8]" "(2.8,3.3]" "(3.3,3.8]" "(3.8,4.2]"
 [8] "(4.2,4.7]" "(4.7,5.4]" "(5.4,7]" 
 > ## final plot
> ## Setup ggplot with data frame
> g <- ggplot(mpg, aes(displ, cty))
